cenums! {
    /// copied from http://llvm.org/doxygen/Support_2ELF_8h_source.html
    #[repr(C)]
    pub struct ElfMachine: u16 {
        const NONE = 0;             // No machine
        const M32 = 1;              // AT&T WE 32100
        const SPARC = 2;            // SPARC
        const I386 = 3;             // Intel 386
        const M68K = 4;             // Motorola 68000
        const M88K = 5;             // Motorola 88000
        const IAMCU = 6;            // Intel MCU
        const I860 = 7;             // Intel 80860
        const MIPS = 8;             // MIPS R3000
        const S370 = 9;             // IBM System/370
        const MIPS_RS3_LE = 10;     // MIPS RS3000 Little-endian
        const PARISC = 15;          // Hewlett-Packard PA-RISC
        const VPP500 = 17;          // Fujitsu VPP500
        const SPARC32PLUS = 18;     // Enhanced instruction set SPARC
        const I960 = 19;            // Intel 80960
        const PPC = 20;             // PowerPC
        const PPC64 = 21;           // PowerPC64
        const S390 = 22;            // IBM System/390
        const SPU = 23;             // IBM SPU/SPC
        const V800 = 36;            // NEC V800
        const FR20 = 37;            // Fujitsu FR20
        const RH32 = 38;            // TRW RH-32
        const RCE = 39;             // Motorola RCE
        const ARM = 40;             // ARM
        const ALPHA = 41;           // DEC Alpha
        const SH = 42;              // Hitachi SH
        const SPARCV9 = 43;         // SPARC V9
        const TRICORE = 44;         // Siemens TriCore
        const ARC = 45;             // Argonaut RISC Core
        const H8_300 = 46;          // Hitachi H8/300
        const H8_300H = 47;         // Hitachi H8/300H
        const H8S = 48;             // Hitachi H8S
        const H8_500 = 49;          // Hitachi H8/500
        const IA_64 = 50;           // Intel IA-64 processor architecture
        const MIPS_X = 51;          // Stanford MIPS-X
        const COLDFIRE = 52;        // Motorola ColdFire
        const M68HC12 = 53;         // Motorola M68HC12
        const MMA = 54;             // Fujitsu MMA Multimedia Accelerator
        const PCP = 55;             // Siemens PCP
        const NCPU = 56;            // Sony nCPU embedded RISC processor
        const NDR1 = 57;            // Denso NDR1 microprocessor
        const STARCORE = 58;        // Motorola Star*Core processor
        const ME16 = 59;            // Toyota ME16 processor
        const ST100 = 60;           // STMicroelectronics ST100 processor
        const TINYJ = 61;           // Advanced Logic Corp. TinyJ embedded processor family
        const X86_64 = 62;          // AMD x86-64 architecture
        const PDSP = 63;            // Sony DSP Processor
        const PDP10 = 64;           // Digital Equipment Corp. PDP-10
        const PDP11 = 65;           // Digital Equipment Corp. PDP-11
        const FX66 = 66;            // Siemens FX66 microcontroller
        const ST9PLUS = 67;         // STMicroelectronics ST9+ 8/16 bit microcontroller
        const ST7 = 68;             // STMicroelectronics ST7 8-bit microcontroller
        const M68HC16 = 69;         // Motorola MC68HC16 Microcontroller
        const M68HC11 = 70;         // Motorola MC68HC11 Microcontroller
        const M68HC08 = 71;         // Motorola MC68HC08 Microcontroller
        const M68HC05 = 72;         // Motorola MC68HC05 Microcontroller
        const SVX = 73;             // Silicon Graphics SVx
        const ST19 = 74;            // STMicroelectronics ST19 8-bit microcontroller
        const VAX = 75;             // Digital VAX
        const CRIS = 76;            // Axis Communications 32-bit embedded processor
        const JAVELIN = 77;         // Infineon Technologies 32-bit embedded processor
        const FIREPATH = 78;        // Element 14 64-bit DSP Processor
        const ZSP = 79;             // LSI Logic 16-bit DSP Processor
        const MMIX = 80;            // Donald Knuth's educational 64-bit processor
        const HUANY = 81;           // Harvard University machine-independent object files
        const PRISM = 82;           // SiTera Prism
        const AVR = 83;             // Atmel AVR 8-bit microcontroller
        const FR30 = 84;            // Fujitsu FR30
        const D10V = 85;            // Mitsubishi D10V
        const D30V = 86;            // Mitsubishi D30V
        const V850 = 87;            // NEC v850
        const M32R = 88;            // Mitsubishi M32R
        const MN10300 = 89;         // Matsushita MN10300
        const MN10200 = 90;         // Matsushita MN10200
        const PJ = 91;              // picoJava
        const OPENRISC = 92;        // OpenRISC 32-bit embedded processor
        const ARC_COMPACT = 93;     // ARC International ARCompact processor (old
                                    // spelling/synonym: EM_ARC_A5)
        const XTENSA = 94;          // Tensilica Xtensa Architecture
        const VIDEOCORE = 95;       // Alphamosaic VideoCore processor
        const TMM_GPP = 96;         // Thompson Multimedia General Purpose Processor
        const NS32K = 97;           // National Semiconductor 32000 series
        const TPC = 98;             // Tenor Network TPC processor
        const SNP1K = 99;           // Trebia SNP 1000 processor
        const ST200 = 100;          // STMicroelectronics (www.st.com) ST200
        const IP2K = 101;           // Ubicom IP2xxx microcontroller family
        const MAX = 102;            // MAX Processor
        const CR = 103;             // National Semiconductor CompactRISC microprocessor
        const F2MC16 = 104;         // Fujitsu F2MC16
        const MSP430 = 105;         // Texas Instruments embedded microcontroller msp430
        const BLACKFIN = 106;       // Analog Devices Blackfin (DSP) processor
        const SE_C33 = 107;         // S1C33 Family of Seiko Epson processors
        const SEP = 108;            // Sharp embedded microprocessor
        const ARCA = 109;           // Arca RISC Microprocessor
        const UNICORE = 110;        // Microprocessor series from PKU-Unity Ltd. and MPRC
                                    // of Peking University
        const EXCESS = 111;         // eXcess: 16/32/64-bit configurable embedded CPU
        const DXP = 112;            // Icera Semiconductor Inc. Deep Execution Processor
        const ALTERA_NIOS2 = 113;   // Altera Nios II soft-core processor
        const CRX = 114;            // National Semiconductor CompactRISC CRX
        const XGATE = 115;          // Motorola XGATE embedded processor
        const C166 = 116;           // Infineon C16x/XC16x processor
        const M16C = 117;           // Renesas M16C series microprocessors
        const DSPIC30F = 118;       // Microchip Technology dsPIC30F Digital Signal
                                    // Controller
        const CE = 119;             // Freescale Communication Engine RISC core
        const M32C = 120;           // Renesas M32C series microprocessors
        const TSK3000 = 131;        // Altium TSK3000 core
        const RS08 = 132;           // Freescale RS08 embedded processor
        const SHARC = 133;          // Analog Devices SHARC family of 32-bit DSP
                                    // processors
        const ECOG2 = 134;          // Cyan Technology eCOG2 microprocessor
        const SCORE7 = 135;         // Sunplus S+core7 RISC processor
        const DSP24 = 136;          // New Japan Radio (NJR) 24-bit DSP Processor
        const VIDEOCORE3 = 137;     // Broadcom VideoCore III processor
        const LATTICEMICO32 = 138;  // RISC processor for Lattice FPGA architecture
        const SE_C17 = 139;         // Seiko Epson C17 family
        const TI_C6000 = 140;       // The Texas Instruments TMS320C6000 DSP family
        const TI_C2000 = 141;       // The Texas Instruments TMS320C2000 DSP family
        const TI_C5500 = 142;       // The Texas Instruments TMS320C55x DSP family
        const MMDSP_PLUS = 160;     // STMicroelectronics 64bit VLIW Data Signal Processor
        const CYPRESS_M8C = 161;    // Cypress M8C microprocessor
        const R32C = 162;           // Renesas R32C series microprocessors
        const TRIMEDIA = 163;       // NXP Semiconductors TriMedia architecture family
        const HEXAGON = 164;        // Qualcomm Hexagon processor
        const I8051 = 165;          // Intel 8051 and variants
        const STXP7X = 166;         // STMicroelectronics STxP7x family of configurable
                                    // and extensible RISC processors
        const NDS32 = 167;          // Andes Technology compact code size embedded RISC
                                    // processor family
        const ECOG1 = 168;          // Cyan Technology eCOG1X family
        const ECOG1X = 168;         // Cyan Technology eCOG1X family
        const MAXQ30 = 169;         // Dallas Semiconductor MAXQ30 Core Micro-controllers
        const XIMO16 = 170;         // New Japan Radio (NJR) 16-bit DSP Processor
        const MANIK = 171;          // M2000 Reconfigurable RISC Microprocessor
        const CRAYNV2 = 172;        // Cray Inc. NV2 vector architecture
        const RX = 173;             // Renesas RX family
        const METAG = 174;          // Imagination Technologies META processor
                                    // architecture
        const MCST_ELBRUS = 175;    // MCST Elbrus general purpose hardware architecture
        const ECOG16 = 176;         // Cyan Technology eCOG16 family
        const CR16 = 177;           // National Semiconductor CompactRISC CR16 16-bit
                                    // microprocessor
        const ETPU = 178;           // Freescale Extended Time Processing Unit
        const SLE9X = 179;          // Infineon Technologies SLE9X core
        const L10M = 180;           // Intel L10M
        const K10M = 181;           // Intel K10M
        const AARCH64 = 183;        // ARM AArch64
        const AVR32 = 185;          // Atmel Corporation 32-bit microprocessor family
        const STM8 = 186;           // STMicroeletronics STM8 8-bit microcontroller
        const TILE64 = 187;         // Tilera TILE64 multicore architecture family
        const TILEPRO = 188;        // Tilera TILEPro multicore architecture family
        const CUDA = 190;           // NVIDIA CUDA architecture
        const TILEGX = 191;         // Tilera TILE-Gx multicore architecture family
        const CLOUDSHIELD = 192;    // CloudShield architecture family
        const COREA_1ST = 193;      // KIPO-KAIST Core-A 1st generation processor family
        const COREA_2ND = 194;      // KIPO-KAIST Core-A 2nd generation processor family
        const ARC_COMPACT2 = 195;   // Synopsys ARCompact V2
        const OPEN8 = 196;          // Open8 8-bit RISC soft processor core
        const RL78 = 197;           // Renesas RL78 family
        const VIDEOCORE5 = 198;     // Broadcom VideoCore V processor
        const R78KOR = 199;         // Renesas 78KOR family
        const DSC56800EX = 200;     // Freescale 56800EX Digital Signal Controller (DSC)
        const BA1 = 201;            // Beyond BA1 CPU architecture
        const BA2 = 202;            // Beyond BA2 CPU architecture
        const XCORE = 203;          // XMOS xCORE processor family
        const MCHP_PIC = 204;       // Microchip 8-bit PIC(r) family
        const INTEL205 = 205;       // Reserved by Intel
        const INTEL206 = 206;       // Reserved by Intel
        const INTEL207 = 207;       // Reserved by Intel
        const INTEL208 = 208;       // Reserved by Intel
        const INTEL209 = 209;       // Reserved by Intel
        const KM32 = 210;           // KM211 KM32 32-bit processor
        const KMX32 = 211;          // KM211 KMX32 32-bit processor
        const KMX16 = 212;          // KM211 KMX16 16-bit processor
        const KMX8 = 213;           // KM211 KMX8 8-bit processor
        const KVARC = 214;          // KM211 KVARC processor
        const CDP = 215;            // Paneve CDP architecture family
        const COGE = 216;           // Cognitive Smart Memory Processor
        const COOL = 217;           // iCelero CoolEngine
        const NORC = 218;           // Nanoradio Optimized RISC
        const CSR_KALIMBA = 219;    // CSR Kalimba architecture family
        const AMDGPU = 224;         // AMD GPU architecture
        const RISCV = 243;          // RISC-V
        const LANAI = 244;          // Lanai 32-bit processor
        const BPF = 247;            // Linux kernel bpf virtual machine

        // A request has been made to the maintainer of the official registry for
        // such numbers for an official value for WebAssembly. As soon as one is
        // allocated; this enum will be updated to use it.
        const WEBASSEMBLY = 0x4157; // WebAssembly architecture
    }
}
